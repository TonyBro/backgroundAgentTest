const WebSocket = require('ws');
const readline = require('readline');

class CursorWebSocketClient {
  constructor(url = 'ws://localhost:3001') {
    this.url = url;
    this.ws = null;
    this.rl = null;
  }

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É
  connect() {
    return new Promise((resolve, reject) => {
      console.log(`–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ ${this.url}...`);
      
      this.ws = new WebSocket(this.url);
      
      this.ws.on('open', () => {
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ Cursor');
        resolve();
      });
      
      this.ws.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
        reject(error);
      });
      
      this.ws.on('close', () => {
        console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
      });
      
      this.ws.on('message', (data) => {
        try {
          const message = JSON.parse(data.toString());
          console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', message);
        } catch (e) {
          console.log('üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', data.toString());
        }
      });
    });
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç Cursor
  sendMessage(content) {
    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {
      console.error('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
      return false;
    }

    const message = {
      type: 'chat-message',
      content: content,
      timestamp: Date.now(),
      from: 'agent-client'
    };

    try {
      this.ws.send(JSON.stringify(message));
      console.log('üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', content);
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error.message);
      return false;
    }
  }

  // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  startInteractiveMode() {
    this.rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });

    console.log('\nüéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞–ø—É—â–µ–Ω!');
    console.log('üí° –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Cursor —á–∞—Ç (–∏–ª–∏ "exit" –¥–ª—è –≤—ã—Ö–æ–¥–∞):');
    
    const promptUser = () => {
      this.rl.question('\n> ', (input) => {
        if (input.toLowerCase() === 'exit') {
          this.close();
          return;
        }
        
        if (input.trim()) {
          this.sendMessage(input);
        }
        
        promptUser();
      });
    };
    
    promptUser();
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  close() {
    if (this.rl) {
      this.rl.close();
    }
    if (this.ws) {
      this.ws.close();
    }
    console.log('üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!');
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  async sendTestMessages() {
    const testMessages = [
      "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–≥–µ–Ω—Ç–∞ 1",
      "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π",
      "–°–æ–∑–¥–∞–π –Ω–æ–≤—ã–π React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      "–ö–∞–∫–∏–µ –µ—Å—Ç—å –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ Node.js?",
      "–ü–æ–º–æ–≥–∏ —Å –æ—Ç–ª–∞–¥–∫–æ–π —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏"
    ];

    console.log('\nüß™ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...');
    
    for (let i = 0; i < testMessages.length; i++) {
      const message = testMessages[i];
      console.log(`\nüìù –¢–µ—Å—Ç ${i + 1}/${testMessages.length}:`);
      this.sendMessage(message);
      
      // –ñ–¥—ë–º —Å–µ–∫—É–Ω–¥—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async function demo() {
  const client = new CursorWebSocketClient();
  
  try {
    await client.connect();
    
    // –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã
    const args = process.argv.slice(2);
    
    if (args.includes('--test')) {
      // –†–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      await client.sendTestMessages();
      setTimeout(() => client.close(), 2000);
    } else if (args.includes('--interactive')) {
      // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
      client.startInteractiveMode();
    } else {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      const message = args.join(' ') || '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–≥–µ–Ω—Ç–∞';
      client.sendMessage(message);
      setTimeout(() => client.close(), 1000);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞:', error.message);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
  process.exit(0);
});

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ WebSocket –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è Cursor...');
  console.log('üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.log('   node cursor-websocket-client.js "–ü—Ä–∏–≤–µ—Ç –æ—Ç –∞–≥–µ–Ω—Ç–∞"');
  console.log('   node cursor-websocket-client.js --interactive');
  console.log('   node cursor-websocket-client.js --test');
  console.log('');
  
  demo();
}

module.exports = CursorWebSocketClient; 