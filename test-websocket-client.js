/**
 * –¢–µ—Å—Ç–æ–≤—ã–π WebSocket –∫–ª–∏–µ–Ω—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å AI Background Agent
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node test-websocket-client.js
 */

const WebSocket = require('ws');

async function testAIAgent() {
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AI Background Agent...');
    
    const ws = new WebSocket('ws://localhost:3020');
    
    ws.on('open', () => {
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ AI Agent —á–µ—Ä–µ–∑ WebSocket');
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π...\n');
        
        // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        const instructions = [
            '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞',
            '–ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs',
            '–°–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã',
            '–í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏'
        ];
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
        instructions.forEach((instruction, index) => {
            setTimeout(() => {
                console.log(`üì§ –§–∞–∑–∞ ${index + 1}: ${instruction}`);
                ws.send(instruction);
            }, (index + 1) * 2000);
        });
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            console.log('\nüîå –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...');
            ws.close();
        }, 10000);
    });
    
    ws.on('message', (data) => {
        try {
            const response = JSON.parse(data);
            console.log('üì• –û—Ç–≤–µ—Ç –æ—Ç AI Agent:', response);
        } catch (error) {
            console.log('üì• –û—Ç–≤–µ—Ç –æ—Ç AI Agent:', data.toString());
        }
        console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    });
    
    ws.on('close', () => {
        console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
        process.exit(0);
    });
    
    ws.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ WebSocket:', error.message);
        
        if (error.code === 'ECONNREFUSED') {
            console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ AI Background Agent –∑–∞–ø—É—â–µ–Ω:');
            console.log('   npm run ai-agent');
        }
        
        process.exit(1);
    });
}

testAIAgent(); 